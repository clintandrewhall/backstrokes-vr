Object.defineProperty(exports,"__esModule",{value:true});exports.addRoutes=undefined;var _express=require('express');var _express2=_interopRequireDefault(_express);var _winston=require('winston');var _winston2=_interopRequireDefault(_winston);var _nodeFoursquare=require('node-foursquare');var _nodeFoursquare2=_interopRequireDefault(_nodeFoursquare);var _moment=require('moment');var _moment2=_interopRequireDefault(_moment);var _expressAsyncHandler=require('express-async-handler');var _expressAsyncHandler2=_interopRequireDefault(_expressAsyncHandler);var _backstroke=require('./backstroke');var _backstroke2=_interopRequireDefault(_backstroke);var _latlng=require('./latlng');var _latlng2=_interopRequireDefault(_latlng);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var logger=_winston2.default.createLogger({level:'debug'});if(process.env.NODE_ENV!=='production'){logger.add(new _winston2.default.transports.Console({format:_winston2.default.format.simple()}));}function sendWindowedResponse(json){return'\n    <html><body><script type="text/javascript">\n      window.opener.postMessage(\n        '+JSON.stringify(json)+',\n        window.opener.location,\n      );\n    </script></body></html>\n  ';}function addRoutes(app,config){var _this=this;var router=_express2.default.Router();var Foursquare=(0,_nodeFoursquare2.default)(config.nodeFoursquare);var Backstroke=(0,_backstroke2.default)(config,Foursquare);var LatLng=(0,_latlng2.default)(config.geocode);function genUser(accessToken){return regeneratorRuntime.async(function genUser$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt('return',new Promise(function(resolve,reject){return Foursquare.Users.getSelfDetails(accessToken,function success(error,results){if(error){reject(error);}else{resolve(results.user);}});}));case 1:case'end':return _context.stop();}}},null,this);}function restrict(request,response,next){var session,_session,foursquare,accessToken,user;return regeneratorRuntime.async(function restrict$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:logger.debug('BEFORE: '+request.url);logger.debug('Entering: /restrict');session=request.session;_session=session,foursquare=_session.foursquare;accessToken=process.env.ACCESS_TOKEN;if(!((!foursquare||!foursquare.accessToken)&&accessToken)){_context2.next=11;break;}_context2.next=8;return regeneratorRuntime.awrap(genUser(accessToken));case 8:user=_context2.sent;request.session.foursquare={accessToken:accessToken,user:user};session=request.session;case 11:if(!session.foursquare){_context2.next=14;break;}next();return _context2.abrupt('return');case 14:response.status(401);response.send('Not Authorized');case 16:case'end':return _context2.stop();}}},null,this);}router.route('/login').get(function(request,response,_){logger.debug('REQUESTING: /api/login');var location=Foursquare.getAuthClientRedirectUrl();response.redirect(location);response.end();});router.route('/callback').get(function(request,response,_){logger.debug('REQUESTING: /callback/foursquare');var query=request.query;var code=query.code;Foursquare.getAccessToken({code:code},function(accessTokenError,accessToken){if(accessTokenError){logger.error('Error retrieving Access Token: '+accessTokenError.message);response.send(sendWindowedResponse({auth:false,reason:accessTokenError.message}));return;}if(accessToken){Foursquare.Users.getSelfDetails(accessToken,function(getUserError,user){if(getUserError){response.send(sendWindowedResponse({auth:false,reason:getUserError.message}));}else{request.session.foursquare={user:user.user,accessToken:accessToken};delete request.query.code;delete request.query.c;response.send(sendWindowedResponse({auth:true}));}});}else{logger.error('No Access Token was received.');response.send(sendWindowedResponse({auth:false,reason:'no_token'}));}});});router.route('/who').get(restrict,function _callee(request,response,_next){var session,foursquare,_ref,user;return regeneratorRuntime.async(function _callee$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:logger.debug('REQUESTING: /api/who');session=request.session;foursquare=session.foursquare;_ref=foursquare||{},user=_ref.user;response.json({foursquare:user});case 5:case'end':return _context3.stop();}}},null,_this);});router.route('/disconnect').get(function(request,response,_){request.session.destroy(function(){response.redirect('/');});});router.route('/checkins').get(restrict,function _callee2(request,response,_){var session,foursquare,_ref2,accessToken,checkinSet;return regeneratorRuntime.async(function _callee2$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:logger.debug('REQUESTING: /trips/:postalCode');session=request.session;foursquare=session.foursquare;_ref2=foursquare||{},accessToken=_ref2.accessToken;_context4.next=6;return regeneratorRuntime.awrap(Backstroke.genCheckins(new Date(1532200086*1000),new Date(1500595200*1000),accessToken));case 6:checkinSet=_context4.sent;response.json(checkinSet);case 8:case'end':return _context4.stop();}}},null,_this);});router.route('/postalCode/:postalCode').get(restrict,function _callee3(request,response,_){var params,postalCode,location;return regeneratorRuntime.async(function _callee3$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:params=request.params;postalCode=params.postalCode;logger.debug('REQUESTING: /postalCode/:postalCode',postalCode);_context5.next=5;return regeneratorRuntime.awrap(LatLng.genLocationByPostalCode(postalCode));case 5:location=_context5.sent;response.json(location);case 7:case'end':return _context5.stop();}}},null,_this);});router.route('/trips').get(restrict,function _callee4(request,response,_){var session,query,foursquare,_ref3,accessToken,options,endDate,startDate,_start,_end,tripCollection;return regeneratorRuntime.async(function _callee4$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:logger.debug('REQUESTING: /trips/:postalCode');session=request.session,query=request.query;foursquare=session.foursquare;_ref3=foursquare||{},accessToken=_ref3.accessToken;options={ignoreHome:true};endDate=(0,_moment2.default)().endOf('month');startDate=(0,_moment2.default)().startOf('month').subtract(1,'year');if(query){_start=query.start,_end=query.end;if(_start){startDate=(0,_moment2.default)(_start);}if(_end){endDate=(0,_moment2.default)(_end);}}logger.debug('Retrieving checkins to build trips.');_context6.next=11;return regeneratorRuntime.awrap(Backstroke.genAllTripCollection(endDate.toDate(),startDate.toDate(),options,accessToken));case 11:tripCollection=_context6.sent;response.json(tripCollection);case 13:case'end':return _context6.stop();}}},null,_this);});router.route('/trips/:postalCode').get(restrict,function _callee5(request,response,_){var session,params,query,foursquare,_ref4,accessToken,postalCode,options,endDate,startDate,_start2,_end2,tripCollection;return regeneratorRuntime.async(function _callee5$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:logger.debug('REQUESTING: /trips/:postalCode');session=request.session,params=request.params,query=request.query;foursquare=session.foursquare;_ref4=foursquare||{},accessToken=_ref4.accessToken;postalCode=params.postalCode;if(postalCode){_context7.next=9;break;}response.status(401);response.send('Postal Code invalid or not provided');return _context7.abrupt('return');case 9:options={};endDate=(0,_moment2.default)().endOf('month');startDate=(0,_moment2.default)().startOf('month').subtract(1,'year');if(query){_start2=query.start,_end2=query.end;if(_start2){startDate=(0,_moment2.default)(_start2);}if(_end2){endDate=(0,_moment2.default)(_end2);}}logger.debug('Retrieving checkins to build trips.');_context7.next=16;return regeneratorRuntime.awrap(Backstroke.genTripCollection(postalCode,endDate.toDate(),startDate.toDate(),options,accessToken));case 16:tripCollection=_context7.sent;response.json(tripCollection);case 18:case'end':return _context7.stop();}}},null,_this);});app.use('/api',router);app.use((0,_expressAsyncHandler2.default)(function _callee6(request,response,next){return regeneratorRuntime.async(function _callee6$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(!request.route){response.status(404);response.send('Not Found');}next();case 2:case'end':return _context8.stop();}}},null,_this);}));}exports.addRoutes=addRoutes;